name: ubuntu buiding

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
  schedule:
    - cron: "0 3 * * *"
env:
  TEST_COMPLIE: yunnysunny/node-compiler:latest
  TEST_RUNTIME: yunnysunny/node-runtime:latest
  NODE_VERSION: 18.19.0

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta for core
        id: meta-core
        uses: docker/metadata-action@v4
        with:
          images: |
            yunnysunny/node
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=v${{env.NODE_VERSION}}
            type=semver,pattern={{major}}.{{minor}},value=v${{env.NODE_VERSION}}
      - name: Docker meta for compiler
        id: meta-compiler
        uses: docker/metadata-action@v4
        with:
          images: |
            yunnysunny/node-compiler
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=v${{env.NODE_VERSION}}
            type=semver,pattern={{major}}.{{minor}},value=v${{env.NODE_VERSION}}
      - name: Docker meta for xtransit
        id: meta-xtransit
        uses: docker/metadata-action@v4
        with:
          images: |
            yunnysunny/node-xtransit
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=v${{env.NODE_VERSION}}
            type=semver,pattern={{major}}.{{minor}},value=v${{env.NODE_VERSION}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build core
        uses: docker/build-push-action@v3
        with:
          context: core
          push: false
          tags: yunnysunny/node:latest
          file: node.dockerfile
          target: core
          cache-from: type=registry,ref=yunnysunny/node:buildcache
          cache-to: type=registry,ref=yunnysunny/node:buildcache,mode=max
          build-args: |
            NODE_VERSION=${{ env.NODE_VERSION }}
          load: true
      - name: Build compiler
        uses: docker/build-push-action@v3
        with:
          context: compiler
          push: false
          tags: ${{ env.TEST_COMPLIE }}
          file: node.dockerfile
          target: compiler
          cache-from: type=registry,ref=yunnysunny/node-compiler:buildcache
          cache-to: type=registry,ref=yunnysunny/node-compiler:buildcache,mode=max
          build-args: |
            NODE_VERSION=${{ env.NODE_VERSION }}
          load: true
      - name: Build xtransit
        uses: docker/build-push-action@v3
        with:
          context: xtransit
          build-args: |
            NODE_VERSION=${{ env.NODE_VERSION }}
          push: false
          target: xtransit
          cache-from: type=registry,ref=yunnysunny/node-xtransit:buildcache
          cache-to: type=registry,ref=yunnysunny/node-xtransit:buildcache,mode=max
          tags: ${{ env.TEST_RUNTIME }}
          file: node.dockerfile
          load: true
      - name: Test hello
        run: |
          cd test/hello && ./test.sh
      - name: Build and push core
        uses: docker/build-push-action@v3
        with:
          context: core
          platforms: linux/amd64,linux/arm64
          file: node.dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-core.outputs.tags }}
          labels: ${{ steps.meta-core.outputs.labels }}
          target: core
          cache-from: type=registry,ref=yunnysunny/node:buildcache
          cache-to: type=registry,ref=yunnysunny/node:buildcache,mode=max
          build-args: |
            NODE_VERSION=${{ env.NODE_VERSION }}
      - name: Build and push compiler
        uses: docker/build-push-action@v3
        with:
          context: core
          platforms: linux/amd64,linux/arm64
          file: node.dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-compiler.outputs.tags }}
          labels: ${{ steps.meta-compiler.outputs.labels }}
          target: compiler
          cache-from: type=registry,ref=yunnysunny/node-compiler:buildcache
          cache-to: type=registry,ref=yunnysunny/node-compiler:buildcache,mode=max
          build-args: |
            NODE_VERSION=${{ env.NODE_VERSION }}
      - name: Build and push xtransit
        uses: docker/build-push-action@v3
        with:
          context: xtransit
          platforms: linux/amd64,linux/arm64
          file: node.dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-xtransit.outputs.tags }}
          labels: ${{ steps.meta-xtransit.outputs.labels }}
          target: xtransit
          cache-from: type=registry,ref=yunnysunny/node-xtransit:buildcache
          cache-to: type=registry,ref=yunnysunny/node-xtransit:buildcache,mode=max
          build-args: |
            NODE_VERSION=${{ env.NODE_VERSION }}
      - name: Update core description
        uses: peter-evans/dockerhub-description@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: yunnysunny/node
      - name: Update compiler description
        uses: peter-evans/dockerhub-description@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: yunnysunny/node-compiler
      - name: Update rumtime description
        uses: peter-evans/dockerhub-description@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: yunnysunny/node-xtransit